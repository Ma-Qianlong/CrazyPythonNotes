加载模块：

为了让 Python 能找到我们编写 （或第三方提供） 的模块，可以用以下两种方式来告诉它。
〉使用环境变量。
〉将模块放在默认的模块加载路径下。
使用环境变量...
Python 将会根据 PYTHONPATH 环境变量的值来确定到哪里去加载模块。
PYTHONPATH 环境变量的值是多个路径的集合，这样 Python 就会依次搜索 PYTHONPATH 环境变量所指定的多个路
径，试图从中找到程序想要加载的模块 。

默认的模块加载路径:
如果要安装某些通用性模块，比如复数功能支持的模块、矩阵计算支持的模块、图形界面支持
的模块等，这些都属于对 Python 本身进行扩展的模块，这种模块应该直接安装在 Python 内部，以
便被所有程序共享 ，此时就可借助于 Python 默认的模块加载路径。
Python 默认的模块加载路径由 sys.path 变量代表 ， 因此可通过在交互式解释器 中执行如下命令
来查看 Python 默认的模块加载路径。
>>> import sys, pprint
>>> pprint.pprint(sys.path)
上面代码使用 pprint 模块下的 pprint（）函数代替普通的 print（）函数，这是因为如果要打印的内 容
很多，使用 pprint 可以显示更友好的打印结果。
通常来说，我们应该将 Python的扩展模块添加在 lib\site-packages 路径下，它专门用于存放 Python 的扩展模块和包 。
