导入模块的语法
import 语句主要有两种用法。
>> import 模块名1[as 别名1］，模块名2[as 别名2], ...： 导入整个模块 。
>> from 模块名 import 成员名1[as 别名1］，成员名2[ as 别名2,...：导入模块中指定成员。

上面两种 import 语句的区别主要有三点 。
>> 第一种 import 语句导入整个模块内的所有成员（包括变量 、 函数、类等）；
第二种 import语句只导入模块内的指定成员（除非使用 form 模块名 import ＊， 但通常不推荐使用这种语法）。
>> 当使用第一种 import 语句导入模块中的成员时，必须添加模块名或模块别名前缀;
当使用第二种 import 语句导入模块中的成员时，无须使用任何前缀，直接使用成员名或成员别名即可。

定义模块：
模块就是 Python 程序！任何 Python 程序都可作为模块导入。 前面我们写的所有 Python 程序都可作为模块导入。
换而言之，随便写的一个 Python 程序，其实都可作为模块导入。对于任何程序，只要导入了模块，即可使用该模块内的所有成员。

为模块编写说明文档：
与前面介绍的函数、类相同的是，在实际开发中往往也应该为模块编写说明文档 ；否则，其他开发者将不知道该模块有什么作用，以及包含哪些功能 。
为模块编写说明文档很简单，只要在模块开始处定义一个字符串直接量即可。 例如，在modulel.py 文件的第一行代码之前添加如下内容。
    '''
    这是我们编写的第一个模块，该模块包含以下内容
    my_book ： 字符串变量
    say_hi ： 简单的函数
    User ：代表用户的类
    '''
这段字符串内容将会作为该模块的说明文挡，可通过模块的 doc 属性来访问文档。