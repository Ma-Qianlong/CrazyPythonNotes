#   OS 模块的文件和目录函数
    在 OS 模块下也提供了大量操作文件和目录的函数，如果读者需
要查阅有关这些函数的说明，则可访问 https://docs.python.org/3/library/os.html 页面。

## 1 与目录相关的函数
与目录相关的函数如下。
》 os.getcwd（）： 获取当前目录 。
》 os.chdir(path）： 改变当前目录 。
》 os.fchdir(fd）： 通过文件描述利改变当前目录。该函数与上一个函数的功能基本相似，只是该函数以文件描述符作为参数来代表目录。
       os_chdir_test.py
》 os.chroot(path） ： 改变当前进程的根目录 。
》 os.listdir(path）： 返回 path 对应目录下的所有文件和子目录 。
》 os.mkdir(path[, mode］)：创建 path 对应的目录，其中 mode 用于指定该目录的权限。该 mode
   参数代表一个 UNIX 风格的权限 ，比如 Oo777 代表所有者可读／可写／可执行、 组用户 可读／
   可写／可执行 、 其他用户可读／可写／可执行 。
》 os.makedirs(path[, mode］)： 其作用类似于 mkdir（），但该函数的功能更加强大，它可以递归
   创建目录。 比如要创建 abc/xyz/wawa 目录，如果在当前目录下没有 abc 目录 ，那么使用
   mkdir（） 函数就会报锚，而使 用 makedirs（）函数 则会先创建 abc ， 然后在其中创建 xyz 子目录 ，
   最后在 xyz 子目录下创建 wawa 子目录 。
       os_mkdir_test.py
》 os.rmdir(path）：删除 path 对应的空目录。 如果目录非空 ，则抛出 一个 OSError 异常。程序
   可以先用 os.remove（）函数删除文件 。
》 os.removedirs(path）： 递归删除目录。 其功能类似于 rmdir（），但该函数 可以递归删除
   abc/xyz/wawa 目录 ， 它会从 wawa 子目录开始删除，然后删除 xyz 子 目录， 最后删 除 abc目录。
       os_rmdir_test.py
》 os.rename(src, dst）： 重命名文件或目录 ， 将 src 重名为 dst 。
》 os.renarmes(old , new）： 对文件或目录进行递归重命名。其功 能类似于 rename （）， 但该函数可
   以递归重命名 abc/xyz/wawa 目录 ， 它会从 wawa 目录开始重命名，然后重命名 xyz 子目录 ， 最后重命名 abc 目录。
       os_rmdir_test.py

## 2 与权限相关的函数
与权限相关的函数如下。
》 os.access(path, mode）： 检查 path 对应的文件或目录是否具有指定权限。 该函数的第二个参
   数可能是 以下四个状态值的一个或多个值。
   • os.F_OK：判断是否存在。
   • os.R_OK：判断是否可读。
   • os.W_OK：判断是否可写。
   • os.X_OK：判断是否可执行。
        os .access_test.py
》 os.chmod(path, mode）： 更改权限。 其中 mode 参数代表要改变的权限，该参数支持的值可
   以是以下一个或多个值的组合 。
   • stat.S_IXOTH：其他用户有执行权限。
   • stat.S_IWOTH：其他用户有写权限。
   • stat.S_IROTH：其他用户有读权限。
   • stat.S_IRWXO：其他用户有全部权限。
   • stat.S_IXGRP：组用户有执行权限。
   • stat.S_IWGRP：组用户有写权限。
   • stat.S_IRGRP：组用户有读权限。
   • stat.S_IRWXG：组用户有全部权限。
   • stat.S_IXUSR：所有者有执行权限。
   • stat.S_IWUSR：所有者有写权限。
   • stat.S_IRUSR：所有者有读权限。
   • stat.S_IRWXU：所有者有全部权限。
   • stat.S_IREAD：Windows将该文件设为只读的。
   • stat.S_IWRITE：Windows将该文件设为可写的。
        os.chmod_test.py
》 os.chown(path, uid, gid)： 更改文件的所有者。 其中 uid 代表用户 id, gid 代表组 id。该命令主要在 UNIX 文件系统下有效 。
》 os.fchrnod(fd, mode）： 改变一个文件的访问权限，该文件由文件描述符 fd 指定。该函数的功能与 os.chmod（）函数的功能相似，只是该函数使用 fd 代表文件。
》 os.fchown(fd, uid, gid）：改变文件的所有者， 该文件由文件描述符fd指定。该函数的功能与 os.chown（）函数的功能相似，只是该函数使用 fd 代表文件 。

## 3 与文件访问相关的函数
与文件访 问相关 的函数如下。